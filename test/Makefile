# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = googletest/googletest

# Where to find user code.
USER_DIR = .

# Tells compiler where to find header files
INCLUDES = -I ../lib/ -I $(TEST_UTILS)

# Project src directory
CAP_SRC = ../src

# Test util directory
TEST_UTILS = ./utils

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = sample_unittest transaction_unittest serialize_unittest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

sample.o : $(USER_DIR)/utils/sample.cc $(USER_DIR)/utils/sample.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/utils/sample.cc

sample_unittest.o : $(USER_DIR)/sample_unittest.cc \
					$(USER_DIR)/utils/sample.h $(GTEST_HEADERS)

	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/sample_unittest.cc

sample_unittest : sample.o sample_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $(USER_DIR)/bin/$@



#####################################################################
#
#
#							CAPCOIN UNITTESTS
#
#
####################################################################

# Transaction Unit Test
TRANSACTION_OBJS = $(CAP_SRC)/transaction.o\
				   $(CAP_SRC)/txin.o $(CAP_SRC)/txout.o\
				   $(CAP_SRC)/utxout.o
				   
test_transaction_utils.o : $(TEST_UTILS)/test_transaction_utils.cpp\
							$(TEST_UTILS)/test_transaction_utils.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $(TEST_UTILS)/test_transaction_utils.cpp
   	
transaction_unittest.o : $(USER_DIR)/transaction_unittest.cc\
						$(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/transaction_unittest.cc

transaction_unittest: $(TRANSACTION_OBJS) test_transaction_utils.o transaction_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -lpthread $^ -o $(USER_DIR)/bin/$@

# Serialize Unit Test
SERIALIZE_OBJS = $(TRANSACTION_OBJS)\
				 $(CAP_SRC)/block.o\
				 $(CAP_SRC)/serialize.o\
				 $(CAP_SRC)/comparator.o

test_serialize_utils.o : $(TEST_UTILS)/test_serialize_utils.cpp\
							$(TEST_UTILS)/test_serialize_utils.h
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $(TEST_UTILS)/test_serialize_utils.cpp
	
serialize_unittest.o : $(USER_DIR)/serialize_unittest.cc\
					$(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -c $(USER_DIR)/serialize_unittest.cc

serialize_unittest : $(SERIALIZE_OBJS) test_serialize_utils.o test_transaction_utils.o serialize_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES) -lpthread $^ -o $(USER_DIR)/bin/$@ 
